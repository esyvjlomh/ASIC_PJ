;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit topModule : 
  module mainState : 
    input clock : Clock
    input reset : Reset
    output io : {flip start : UInt<1>, flip finish : UInt<1>, game_en : UInt<1>, game_end : UInt<1>, round : UInt<2>}
    
    io.game_en <= UInt<1>("h01") @[mainState.scala 15:14]
    io.game_end <= UInt<1>("h01") @[mainState.scala 16:15]
    io.round <= UInt<1>("h00") @[mainState.scala 17:12]
    reg stateReg : UInt<2>, clock with : (reset => (reset, UInt<2>("h00"))) @[mainState.scala 21:25]
    node _T = eq(UInt<2>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      io.round <= UInt<1>("h00") @[mainState.scala 26:16]
      io.game_en <= UInt<1>("h01") @[mainState.scala 27:18]
      io.game_end <= UInt<1>("h00") @[mainState.scala 28:19]
      node _T_1 = eq(io.start, UInt<1>("h00")) @[mainState.scala 29:21]
      when _T_1 : @[mainState.scala 29:29]
        stateReg <= UInt<2>("h01") @[mainState.scala 30:18]
        io.game_end <= UInt<1>("h01") @[mainState.scala 31:21]
        skip @[mainState.scala 29:29]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<2>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        io.round <= UInt<1>("h01") @[mainState.scala 35:16]
        io.game_en <= UInt<1>("h00") @[mainState.scala 36:18]
        node _T_3 = eq(io.finish, UInt<1>("h00")) @[mainState.scala 37:22]
        when _T_3 : @[mainState.scala 37:30]
          io.game_en <= UInt<1>("h01") @[mainState.scala 38:20]
          stateReg <= UInt<2>("h02") @[mainState.scala 39:18]
          skip @[mainState.scala 37:30]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<2>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          io.round <= UInt<2>("h02") @[mainState.scala 43:16]
          io.game_en <= UInt<1>("h00") @[mainState.scala 44:18]
          node _T_5 = eq(io.finish, UInt<1>("h00")) @[mainState.scala 45:22]
          when _T_5 : @[mainState.scala 45:30]
            io.game_en <= UInt<1>("h01") @[mainState.scala 46:20]
            stateReg <= UInt<2>("h03") @[mainState.scala 47:18]
            skip @[mainState.scala 45:30]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_6 = eq(UInt<2>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_6 : @[Conditional.scala 39:67]
            io.round <= UInt<2>("h03") @[mainState.scala 51:16]
            io.game_en <= UInt<1>("h00") @[mainState.scala 52:18]
            node _T_7 = eq(io.finish, UInt<1>("h00")) @[mainState.scala 53:22]
            when _T_7 : @[mainState.scala 53:30]
              io.game_en <= UInt<1>("h01") @[mainState.scala 54:20]
              stateReg <= UInt<2>("h00") @[mainState.scala 55:18]
              skip @[mainState.scala 53:30]
            skip @[Conditional.scala 39:67]
    
  module MaxPeriodFibonacciLFSR : 
    input clock : Clock
    input reset : Reset
    output io : {flip seed : {valid : UInt<1>, bits : UInt<1>[3]}, flip increment : UInt<1>, out : UInt<1>[3]}
    
    wire _state_WIRE : UInt<1>[3] @[PRNG.scala 38:28]
    _state_WIRE[0] <= UInt<1>("h01") @[PRNG.scala 38:28]
    _state_WIRE[1] <= UInt<1>("h01") @[PRNG.scala 38:28]
    _state_WIRE[2] <= UInt<1>("h00") @[PRNG.scala 38:28]
    reg state : UInt<1>[3], clock with : (reset => (reset, _state_WIRE)) @[PRNG.scala 47:50]
    when io.increment : @[PRNG.scala 61:23]
      node _T = xor(state[2], state[1]) @[LFSR.scala 15:41]
      state[0] <= _T @[PRNG.scala 62:11]
      state[1] <= state[0] @[PRNG.scala 62:11]
      state[2] <= state[1] @[PRNG.scala 62:11]
      skip @[PRNG.scala 61:23]
    when io.seed.valid : @[PRNG.scala 65:25]
      state[0] <= io.seed.bits[0] @[PRNG.scala 66:11]
      state[1] <= io.seed.bits[1] @[PRNG.scala 66:11]
      state[2] <= io.seed.bits[2] @[PRNG.scala 66:11]
      skip @[PRNG.scala 65:25]
    io.out[0] <= state[0] @[PRNG.scala 69:10]
    io.out[1] <= state[1] @[PRNG.scala 69:10]
    io.out[2] <= state[2] @[PRNG.scala 69:10]
    
  module innerState : 
    input clock : Clock
    input reset : Reset
    output io : {flip game_en : UInt<1>, flip game_end : UInt<1>, flip round : UInt<2>, flip button : UInt<8>, finish : UInt<1>, mouse : UInt<8>, score : UInt<8>}
    
    inst random_prng of MaxPeriodFibonacciLFSR @[PRNG.scala 82:22]
    random_prng.clock <= clock
    random_prng.reset <= reset
    random_prng.io.seed.valid <= UInt<1>("h00") @[PRNG.scala 83:24]
    random_prng.io.seed.bits[0] is invalid @[PRNG.scala 84:23]
    random_prng.io.seed.bits[1] is invalid @[PRNG.scala 84:23]
    random_prng.io.seed.bits[2] is invalid @[PRNG.scala 84:23]
    random_prng.io.increment <= UInt<1>("h01") @[PRNG.scala 85:23]
    node random_hi = cat(random_prng.io.out[2], random_prng.io.out[1]) @[PRNG.scala 86:17]
    node random = cat(random_hi, random_prng.io.out[0]) @[PRNG.scala 86:17]
    reg mouseReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[innerState.scala 21:25]
    reg scoreReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[innerState.scala 22:25]
    reg stepReg : UInt<8>, clock @[innerState.scala 23:20]
    reg countReg : UInt<8>, clock @[innerState.scala 24:21]
    io.finish <= UInt<1>("h01") @[innerState.scala 26:13]
    io.mouse <= UInt<8>("h0ff") @[innerState.scala 27:12]
    io.score <= scoreReg @[innerState.scala 28:12]
    node _T = eq(UInt<1>("h00"), random) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      mouseReg <= UInt<8>("h0fe") @[innerState.scala 46:22]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<1>("h01"), random) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        mouseReg <= UInt<8>("h0fd") @[innerState.scala 47:22]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<2>("h02"), random) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          mouseReg <= UInt<8>("h0fb") @[innerState.scala 48:22]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_3 = eq(UInt<2>("h03"), random) @[Conditional.scala 37:30]
          when _T_3 : @[Conditional.scala 39:67]
            mouseReg <= UInt<8>("h0f7") @[innerState.scala 49:22]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_4 = eq(UInt<3>("h04"), random) @[Conditional.scala 37:30]
            when _T_4 : @[Conditional.scala 39:67]
              mouseReg <= UInt<8>("h0ef") @[innerState.scala 50:22]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_5 = eq(UInt<3>("h05"), random) @[Conditional.scala 37:30]
              when _T_5 : @[Conditional.scala 39:67]
                mouseReg <= UInt<8>("h0df") @[innerState.scala 51:22]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_6 = eq(UInt<3>("h06"), random) @[Conditional.scala 37:30]
                when _T_6 : @[Conditional.scala 39:67]
                  mouseReg <= UInt<8>("h0bf") @[innerState.scala 52:22]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_7 = eq(UInt<3>("h07"), random) @[Conditional.scala 37:30]
                  when _T_7 : @[Conditional.scala 39:67]
                    mouseReg <= UInt<7>("h07f") @[innerState.scala 53:22]
                    skip @[Conditional.scala 39:67]
    reg stateReg : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[innerState.scala 57:25]
    node _T_8 = eq(UInt<3>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_8 : @[Conditional.scala 40:58]
      io.finish <= UInt<1>("h01") @[innerState.scala 71:17]
      node _T_9 = eq(io.game_en, UInt<1>("h00")) @[innerState.scala 72:23]
      when _T_9 : @[innerState.scala 72:31]
        stateReg <= UInt<3>("h01") @[innerState.scala 73:18]
        stepReg <= UInt<3>("h07") @[innerState.scala 74:17]
        countReg <= UInt<2>("h03") @[innerState.scala 75:18]
        io.mouse <= UInt<1>("h00") @[innerState.scala 76:18]
        skip @[innerState.scala 72:31]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_10 = eq(UInt<3>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_10 : @[Conditional.scala 39:67]
        io.mouse <= UInt<1>("h00") @[innerState.scala 83:16]
        node _countReg_T = sub(countReg, UInt<1>("h01")) @[innerState.scala 84:28]
        node _countReg_T_1 = tail(_countReg_T, 1) @[innerState.scala 84:28]
        countReg <= _countReg_T_1 @[innerState.scala 84:16]
        node _T_11 = eq(countReg, UInt<1>("h00")) @[innerState.scala 85:21]
        when _T_11 : @[innerState.scala 85:30]
          stateReg <= UInt<3>("h02") @[innerState.scala 86:18]
          node _countReg_T_2 = mul(UInt<2>("h02"), io.round) @[innerState.scala 87:30]
          node _countReg_T_3 = sub(UInt<4>("h0a"), _countReg_T_2) @[innerState.scala 87:26]
          node _countReg_T_4 = tail(_countReg_T_3, 1) @[innerState.scala 87:26]
          node _countReg_T_5 = sub(_countReg_T_4, UInt<1>("h01")) @[innerState.scala 87:39]
          node _countReg_T_6 = tail(_countReg_T_5, 1) @[innerState.scala 87:39]
          node _countReg_T_7 = mul(_countReg_T_6, UInt<1>("h01")) @[innerState.scala 87:44]
          countReg <= _countReg_T_7 @[innerState.scala 87:18]
          skip @[innerState.scala 85:30]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_12 = eq(UInt<3>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_12 : @[Conditional.scala 39:67]
          io.mouse <= mouseReg @[innerState.scala 93:16]
          node _countReg_T_8 = sub(countReg, UInt<1>("h01")) @[innerState.scala 94:28]
          node _countReg_T_9 = tail(_countReg_T_8, 1) @[innerState.scala 94:28]
          countReg <= _countReg_T_9 @[innerState.scala 94:16]
          node _T_13 = neq(io.button, UInt<8>("h0ff")) @[innerState.scala 95:22]
          when _T_13 : @[innerState.scala 95:42]
            node _T_14 = eq(io.button, mouseReg) @[innerState.scala 96:24]
            when _T_14 : @[innerState.scala 96:37]
              stateReg <= UInt<3>("h03") @[innerState.scala 97:20]
              node _scoreReg_T = add(scoreReg, io.round) @[innerState.scala 98:32]
              node _scoreReg_T_1 = tail(_scoreReg_T, 1) @[innerState.scala 98:32]
              scoreReg <= _scoreReg_T_1 @[innerState.scala 98:20]
              skip @[innerState.scala 96:37]
            else : @[innerState.scala 99:20]
              stateReg <= UInt<3>("h04") @[innerState.scala 100:20]
              skip @[innerState.scala 99:20]
            skip @[innerState.scala 95:42]
          node _T_15 = eq(countReg, UInt<1>("h00")) @[innerState.scala 103:21]
          when _T_15 : @[innerState.scala 103:29]
            stateReg <= UInt<3>("h04") @[innerState.scala 104:18]
            skip @[innerState.scala 103:29]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_16 = eq(UInt<3>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_16 : @[Conditional.scala 39:67]
            node _countReg_T_10 = sub(countReg, UInt<1>("h01")) @[innerState.scala 112:28]
            node _countReg_T_11 = tail(_countReg_T_10, 1) @[innerState.scala 112:28]
            countReg <= _countReg_T_11 @[innerState.scala 112:16]
            mouseReg <= UInt<8>("h0ff") @[innerState.scala 113:16]
            node _T_17 = eq(countReg, UInt<1>("h00")) @[innerState.scala 114:21]
            when _T_17 : @[innerState.scala 114:29]
              stateReg <= UInt<3>("h05") @[innerState.scala 115:18]
              skip @[innerState.scala 114:29]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_18 = eq(UInt<3>("h04"), stateReg) @[Conditional.scala 37:30]
            when _T_18 : @[Conditional.scala 39:67]
              mouseReg <= UInt<8>("h0ff") @[innerState.scala 119:16]
              node _T_19 = eq(countReg, UInt<1>("h00")) @[innerState.scala 120:21]
              when _T_19 : @[innerState.scala 120:30]
                stateReg <= UInt<3>("h05") @[innerState.scala 121:18]
                skip @[innerState.scala 120:30]
              else : @[innerState.scala 122:19]
                node _countReg_T_12 = sub(countReg, UInt<1>("h01")) @[innerState.scala 123:30]
                node _countReg_T_13 = tail(_countReg_T_12, 1) @[innerState.scala 123:30]
                countReg <= _countReg_T_13 @[innerState.scala 123:18]
                skip @[innerState.scala 122:19]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_20 = eq(UInt<3>("h05"), stateReg) @[Conditional.scala 37:30]
              when _T_20 : @[Conditional.scala 39:67]
                node _stepReg_T = sub(stepReg, UInt<1>("h01")) @[innerState.scala 129:26]
                node _stepReg_T_1 = tail(_stepReg_T, 1) @[innerState.scala 129:26]
                stepReg <= _stepReg_T_1 @[innerState.scala 129:15]
                node _T_21 = eq(stepReg, UInt<1>("h00")) @[innerState.scala 130:20]
                when _T_21 : @[innerState.scala 130:28]
                  stateReg <= UInt<3>("h06") @[innerState.scala 131:18]
                  skip @[innerState.scala 130:28]
                else : @[innerState.scala 132:18]
                  stateReg <= UInt<3>("h02") @[innerState.scala 133:18]
                  node _countReg_T_14 = mul(UInt<2>("h02"), io.round) @[innerState.scala 134:30]
                  node _countReg_T_15 = sub(UInt<4>("h0a"), _countReg_T_14) @[innerState.scala 134:26]
                  node _countReg_T_16 = tail(_countReg_T_15, 1) @[innerState.scala 134:26]
                  node _countReg_T_17 = sub(_countReg_T_16, UInt<1>("h01")) @[innerState.scala 134:39]
                  node _countReg_T_18 = tail(_countReg_T_17, 1) @[innerState.scala 134:39]
                  node _countReg_T_19 = mul(_countReg_T_18, UInt<1>("h01")) @[innerState.scala 134:44]
                  countReg <= _countReg_T_19 @[innerState.scala 134:18]
                  skip @[innerState.scala 132:18]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_22 = eq(UInt<3>("h06"), stateReg) @[Conditional.scala 37:30]
                when _T_22 : @[Conditional.scala 39:67]
                  io.finish <= UInt<1>("h00") @[innerState.scala 140:17]
                  stateReg <= UInt<3>("h00") @[innerState.scala 141:16]
                  skip @[Conditional.scala 39:67]
    node _T_23 = eq(io.game_end, UInt<1>("h00")) @[innerState.scala 146:20]
    when _T_23 : @[innerState.scala 146:28]
      stateReg <= UInt<3>("h00") @[innerState.scala 147:14]
      skip @[innerState.scala 146:28]
    
  module LED : 
    input clock : Clock
    input reset : Reset
    output io : {flip score : UInt<8>, ind : UInt<8>, ten : UInt<8>, hund : UInt<8>}
    
    wire indWire : UInt<8> @[LED.scala 14:21]
    wire tenWire : UInt<8> @[LED.scala 15:21]
    wire hundWire : UInt<8> @[LED.scala 16:22]
    io.hund <= UInt<1>("h00") @[LED.scala 17:11]
    io.ten <= UInt<1>("h00") @[LED.scala 18:10]
    io.ind <= UInt<1>("h00") @[LED.scala 19:10]
    node _hundWire_T = div(io.score, UInt<7>("h064")) @[LED.scala 21:24]
    hundWire <= _hundWire_T @[LED.scala 21:12]
    node _tenWire_T = mul(hundWire, UInt<7>("h064")) @[LED.scala 22:35]
    node _tenWire_T_1 = sub(io.score, _tenWire_T) @[LED.scala 22:24]
    node _tenWire_T_2 = tail(_tenWire_T_1, 1) @[LED.scala 22:24]
    node _tenWire_T_3 = div(_tenWire_T_2, UInt<4>("h0a")) @[LED.scala 22:44]
    tenWire <= _tenWire_T_3 @[LED.scala 22:11]
    node _indWire_T = mul(hundWire, UInt<7>("h064")) @[LED.scala 23:34]
    node _indWire_T_1 = sub(io.score, _indWire_T) @[LED.scala 23:23]
    node _indWire_T_2 = tail(_indWire_T_1, 1) @[LED.scala 23:23]
    node _indWire_T_3 = mul(tenWire, UInt<4>("h0a")) @[LED.scala 23:51]
    node _indWire_T_4 = sub(_indWire_T_2, _indWire_T_3) @[LED.scala 23:41]
    node _indWire_T_5 = tail(_indWire_T_4, 1) @[LED.scala 23:41]
    indWire <= _indWire_T_5 @[LED.scala 23:11]
    node _T = eq(UInt<1>("h00"), hundWire) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      io.hund <= UInt<2>("h03") @[LED.scala 26:21]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<1>("h01"), hundWire) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        io.hund <= UInt<7>("h060") @[LED.scala 27:21]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<2>("h02"), hundWire) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          io.hund <= UInt<6>("h025") @[LED.scala 28:21]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_3 = eq(UInt<2>("h03"), hundWire) @[Conditional.scala 37:30]
          when _T_3 : @[Conditional.scala 39:67]
            io.hund <= UInt<4>("h0d") @[LED.scala 29:21]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_4 = eq(UInt<3>("h04"), hundWire) @[Conditional.scala 37:30]
            when _T_4 : @[Conditional.scala 39:67]
              io.hund <= UInt<8>("h099") @[LED.scala 30:21]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_5 = eq(UInt<3>("h05"), hundWire) @[Conditional.scala 37:30]
              when _T_5 : @[Conditional.scala 39:67]
                io.hund <= UInt<7>("h049") @[LED.scala 31:21]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_6 = eq(UInt<3>("h06"), hundWire) @[Conditional.scala 37:30]
                when _T_6 : @[Conditional.scala 39:67]
                  io.hund <= UInt<7>("h041") @[LED.scala 32:21]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_7 = eq(UInt<3>("h07"), hundWire) @[Conditional.scala 37:30]
                  when _T_7 : @[Conditional.scala 39:67]
                    io.hund <= UInt<5>("h01f") @[LED.scala 33:21]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_8 = eq(UInt<4>("h08"), hundWire) @[Conditional.scala 37:30]
                    when _T_8 : @[Conditional.scala 39:67]
                      io.hund <= UInt<1>("h01") @[LED.scala 34:21]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_9 = eq(UInt<4>("h09"), hundWire) @[Conditional.scala 37:30]
                      when _T_9 : @[Conditional.scala 39:67]
                        io.hund <= UInt<4>("h09") @[LED.scala 35:21]
                        skip @[Conditional.scala 39:67]
    node _T_10 = eq(UInt<1>("h00"), tenWire) @[Conditional.scala 37:30]
    when _T_10 : @[Conditional.scala 40:58]
      io.ten <= UInt<2>("h03") @[LED.scala 39:20]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_11 = eq(UInt<1>("h01"), tenWire) @[Conditional.scala 37:30]
      when _T_11 : @[Conditional.scala 39:67]
        io.ten <= UInt<7>("h060") @[LED.scala 40:20]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_12 = eq(UInt<2>("h02"), tenWire) @[Conditional.scala 37:30]
        when _T_12 : @[Conditional.scala 39:67]
          io.ten <= UInt<6>("h025") @[LED.scala 41:20]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_13 = eq(UInt<2>("h03"), tenWire) @[Conditional.scala 37:30]
          when _T_13 : @[Conditional.scala 39:67]
            io.ten <= UInt<4>("h0d") @[LED.scala 42:20]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_14 = eq(UInt<3>("h04"), tenWire) @[Conditional.scala 37:30]
            when _T_14 : @[Conditional.scala 39:67]
              io.ten <= UInt<8>("h099") @[LED.scala 43:20]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_15 = eq(UInt<3>("h05"), tenWire) @[Conditional.scala 37:30]
              when _T_15 : @[Conditional.scala 39:67]
                io.ten <= UInt<7>("h049") @[LED.scala 44:20]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_16 = eq(UInt<3>("h06"), tenWire) @[Conditional.scala 37:30]
                when _T_16 : @[Conditional.scala 39:67]
                  io.ten <= UInt<7>("h041") @[LED.scala 45:20]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_17 = eq(UInt<3>("h07"), tenWire) @[Conditional.scala 37:30]
                  when _T_17 : @[Conditional.scala 39:67]
                    io.ten <= UInt<5>("h01f") @[LED.scala 46:20]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_18 = eq(UInt<4>("h08"), tenWire) @[Conditional.scala 37:30]
                    when _T_18 : @[Conditional.scala 39:67]
                      io.ten <= UInt<1>("h01") @[LED.scala 47:20]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_19 = eq(UInt<4>("h09"), tenWire) @[Conditional.scala 37:30]
                      when _T_19 : @[Conditional.scala 39:67]
                        io.ten <= UInt<4>("h09") @[LED.scala 48:20]
                        skip @[Conditional.scala 39:67]
    node _T_20 = eq(UInt<1>("h00"), indWire) @[Conditional.scala 37:30]
    when _T_20 : @[Conditional.scala 40:58]
      io.ind <= UInt<2>("h03") @[LED.scala 52:20]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_21 = eq(UInt<1>("h01"), indWire) @[Conditional.scala 37:30]
      when _T_21 : @[Conditional.scala 39:67]
        io.ind <= UInt<7>("h060") @[LED.scala 53:20]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_22 = eq(UInt<2>("h02"), indWire) @[Conditional.scala 37:30]
        when _T_22 : @[Conditional.scala 39:67]
          io.ind <= UInt<6>("h025") @[LED.scala 54:20]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_23 = eq(UInt<2>("h03"), indWire) @[Conditional.scala 37:30]
          when _T_23 : @[Conditional.scala 39:67]
            io.ind <= UInt<4>("h0d") @[LED.scala 55:20]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_24 = eq(UInt<3>("h04"), indWire) @[Conditional.scala 37:30]
            when _T_24 : @[Conditional.scala 39:67]
              io.ind <= UInt<8>("h099") @[LED.scala 56:20]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_25 = eq(UInt<3>("h05"), indWire) @[Conditional.scala 37:30]
              when _T_25 : @[Conditional.scala 39:67]
                io.ind <= UInt<7>("h049") @[LED.scala 57:20]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_26 = eq(UInt<3>("h06"), indWire) @[Conditional.scala 37:30]
                when _T_26 : @[Conditional.scala 39:67]
                  io.ind <= UInt<7>("h041") @[LED.scala 58:20]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_27 = eq(UInt<3>("h07"), indWire) @[Conditional.scala 37:30]
                  when _T_27 : @[Conditional.scala 39:67]
                    io.ind <= UInt<5>("h01f") @[LED.scala 59:20]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_28 = eq(UInt<4>("h08"), indWire) @[Conditional.scala 37:30]
                    when _T_28 : @[Conditional.scala 39:67]
                      io.ind <= UInt<1>("h01") @[LED.scala 60:20]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_29 = eq(UInt<4>("h09"), indWire) @[Conditional.scala 37:30]
                      when _T_29 : @[Conditional.scala 39:67]
                        io.ind <= UInt<4>("h09") @[LED.scala 61:20]
                        skip @[Conditional.scala 39:67]
    
  module topModule : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip start : UInt<1>, flip button : UInt<8>, mouse : UInt<8>, ind : UInt<8>, ten : UInt<8>, hund : UInt<8>}
    
    inst main of mainState @[topModule.scala 16:20]
    main.clock <= clock
    main.reset <= reset
    inst inner of innerState @[topModule.scala 17:21]
    inner.clock <= clock
    inner.reset <= reset
    inst LED of LED @[topModule.scala 18:19]
    LED.clock <= clock
    LED.reset <= reset
    main.io.start <= io.start @[topModule.scala 20:17]
    inner.io.button <= io.button @[topModule.scala 21:19]
    main.io.finish <= inner.io.finish @[topModule.scala 22:18]
    inner.io.game_en <= main.io.game_en @[topModule.scala 23:19]
    inner.io.game_end <= main.io.game_end @[topModule.scala 24:20]
    inner.io.round <= main.io.round @[topModule.scala 25:17]
    io.mouse <= inner.io.mouse @[topModule.scala 26:12]
    LED.io.score <= inner.io.score @[topModule.scala 27:18]
    io.ind <= LED.io.ind @[topModule.scala 28:10]
    io.ten <= LED.io.ten @[topModule.scala 29:10]
    io.hund <= LED.io.hund @[topModule.scala 30:11]
    
