;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit innerState : 
  module MaxPeriodFibonacciLFSR : 
    input clock : Clock
    input reset : Reset
    output io : {flip seed : {valid : UInt<1>, bits : UInt<1>[3]}, flip increment : UInt<1>, out : UInt<1>[3]}
    
    wire _state_WIRE : UInt<1>[3] @[PRNG.scala 38:28]
    _state_WIRE[0] <= UInt<1>("h01") @[PRNG.scala 38:28]
    _state_WIRE[1] <= UInt<1>("h01") @[PRNG.scala 38:28]
    _state_WIRE[2] <= UInt<1>("h00") @[PRNG.scala 38:28]
    reg state : UInt<1>[3], clock with : (reset => (reset, _state_WIRE)) @[PRNG.scala 47:50]
    when io.increment : @[PRNG.scala 61:23]
      node _T = xor(state[2], state[1]) @[LFSR.scala 15:41]
      state[0] <= _T @[PRNG.scala 62:11]
      state[1] <= state[0] @[PRNG.scala 62:11]
      state[2] <= state[1] @[PRNG.scala 62:11]
      skip @[PRNG.scala 61:23]
    when io.seed.valid : @[PRNG.scala 65:25]
      state[0] <= io.seed.bits[0] @[PRNG.scala 66:11]
      state[1] <= io.seed.bits[1] @[PRNG.scala 66:11]
      state[2] <= io.seed.bits[2] @[PRNG.scala 66:11]
      skip @[PRNG.scala 65:25]
    io.out[0] <= state[0] @[PRNG.scala 69:10]
    io.out[1] <= state[1] @[PRNG.scala 69:10]
    io.out[2] <= state[2] @[PRNG.scala 69:10]
    
  module innerState : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip game_en : UInt<1>, flip game_end : UInt<1>, flip round : UInt<2>, flip button : UInt<8>, finish : UInt<1>, mouse : UInt<8>, score : UInt<8>}
    
    inst random_prng of MaxPeriodFibonacciLFSR @[PRNG.scala 82:22]
    random_prng.clock <= clock
    random_prng.reset <= reset
    random_prng.io.seed.valid <= UInt<1>("h00") @[PRNG.scala 83:24]
    random_prng.io.seed.bits[0] is invalid @[PRNG.scala 84:23]
    random_prng.io.seed.bits[1] is invalid @[PRNG.scala 84:23]
    random_prng.io.seed.bits[2] is invalid @[PRNG.scala 84:23]
    random_prng.io.increment <= UInt<1>("h01") @[PRNG.scala 85:23]
    node random_hi = cat(random_prng.io.out[2], random_prng.io.out[1]) @[PRNG.scala 86:17]
    node random = cat(random_hi, random_prng.io.out[0]) @[PRNG.scala 86:17]
    reg mouseReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[innerState.scala 21:25]
    reg scoreReg : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[innerState.scala 22:25]
    reg stepReg : UInt<8>, clock @[innerState.scala 23:20]
    reg countReg : UInt<16>, clock @[innerState.scala 24:21]
    io.finish <= UInt<1>("h01") @[innerState.scala 26:13]
    io.mouse <= UInt<8>("h0ff") @[innerState.scala 27:12]
    io.score <= scoreReg @[innerState.scala 28:12]
    node _T = eq(UInt<1>("h00"), random) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      mouseReg <= UInt<8>("h0fe") @[innerState.scala 55:22]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<1>("h01"), random) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        mouseReg <= UInt<8>("h0fd") @[innerState.scala 56:22]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<2>("h02"), random) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          mouseReg <= UInt<8>("h0fb") @[innerState.scala 57:22]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_3 = eq(UInt<2>("h03"), random) @[Conditional.scala 37:30]
          when _T_3 : @[Conditional.scala 39:67]
            mouseReg <= UInt<8>("h0f7") @[innerState.scala 58:22]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_4 = eq(UInt<3>("h04"), random) @[Conditional.scala 37:30]
            when _T_4 : @[Conditional.scala 39:67]
              mouseReg <= UInt<8>("h0ef") @[innerState.scala 59:22]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_5 = eq(UInt<3>("h05"), random) @[Conditional.scala 37:30]
              when _T_5 : @[Conditional.scala 39:67]
                mouseReg <= UInt<8>("h0df") @[innerState.scala 60:22]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_6 = eq(UInt<3>("h06"), random) @[Conditional.scala 37:30]
                when _T_6 : @[Conditional.scala 39:67]
                  mouseReg <= UInt<8>("h0bf") @[innerState.scala 61:22]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_7 = eq(UInt<3>("h07"), random) @[Conditional.scala 37:30]
                  when _T_7 : @[Conditional.scala 39:67]
                    mouseReg <= UInt<7>("h07f") @[innerState.scala 62:22]
                    skip @[Conditional.scala 39:67]
    reg stateReg : UInt<3>, clock with : (reset => (reset, UInt<3>("h00"))) @[innerState.scala 67:25]
    node _T_8 = eq(UInt<3>("h00"), stateReg) @[Conditional.scala 37:30]
    when _T_8 : @[Conditional.scala 40:58]
      io.finish <= UInt<1>("h01") @[innerState.scala 82:17]
      node _T_9 = eq(io.game_en, UInt<1>("h00")) @[innerState.scala 83:23]
      when _T_9 : @[innerState.scala 83:31]
        stateReg <= UInt<3>("h01") @[innerState.scala 84:18]
        stepReg <= UInt<3>("h07") @[innerState.scala 85:17]
        countReg <= UInt<12>("h0bb8") @[innerState.scala 86:18]
        io.mouse <= UInt<1>("h00") @[innerState.scala 87:18]
        skip @[innerState.scala 83:31]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_10 = eq(UInt<3>("h01"), stateReg) @[Conditional.scala 37:30]
      when _T_10 : @[Conditional.scala 39:67]
        io.mouse <= UInt<1>("h00") @[innerState.scala 94:16]
        node _countReg_T = sub(countReg, UInt<1>("h01")) @[innerState.scala 95:28]
        node _countReg_T_1 = tail(_countReg_T, 1) @[innerState.scala 95:28]
        countReg <= _countReg_T_1 @[innerState.scala 95:16]
        node _T_11 = eq(countReg, UInt<1>("h00")) @[innerState.scala 96:21]
        when _T_11 : @[innerState.scala 96:30]
          stateReg <= UInt<3>("h02") @[innerState.scala 97:18]
          node _countReg_T_2 = mul(UInt<2>("h02"), io.round) @[innerState.scala 98:30]
          node _countReg_T_3 = sub(UInt<4>("h0a"), _countReg_T_2) @[innerState.scala 98:26]
          node _countReg_T_4 = tail(_countReg_T_3, 1) @[innerState.scala 98:26]
          node _countReg_T_5 = mul(_countReg_T_4, UInt<10>("h03e8")) @[innerState.scala 98:40]
          countReg <= _countReg_T_5 @[innerState.scala 98:18]
          skip @[innerState.scala 96:30]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_12 = eq(UInt<3>("h02"), stateReg) @[Conditional.scala 37:30]
        when _T_12 : @[Conditional.scala 39:67]
          io.mouse <= mouseReg @[innerState.scala 104:16]
          node _countReg_T_6 = sub(countReg, UInt<1>("h01")) @[innerState.scala 105:28]
          node _countReg_T_7 = tail(_countReg_T_6, 1) @[innerState.scala 105:28]
          countReg <= _countReg_T_7 @[innerState.scala 105:16]
          node _T_13 = neq(io.button, UInt<8>("h0ff")) @[innerState.scala 106:22]
          when _T_13 : @[innerState.scala 106:42]
            node _T_14 = eq(io.button, mouseReg) @[innerState.scala 107:24]
            when _T_14 : @[innerState.scala 107:37]
              stateReg <= UInt<3>("h03") @[innerState.scala 108:20]
              node _scoreReg_T = add(scoreReg, io.round) @[innerState.scala 109:32]
              node _scoreReg_T_1 = tail(_scoreReg_T, 1) @[innerState.scala 109:32]
              scoreReg <= _scoreReg_T_1 @[innerState.scala 109:20]
              skip @[innerState.scala 107:37]
            else : @[innerState.scala 110:20]
              stateReg <= UInt<3>("h04") @[innerState.scala 111:20]
              skip @[innerState.scala 110:20]
            skip @[innerState.scala 106:42]
          node _T_15 = eq(countReg, UInt<1>("h00")) @[innerState.scala 114:21]
          when _T_15 : @[innerState.scala 114:29]
            stateReg <= UInt<3>("h04") @[innerState.scala 115:18]
            skip @[innerState.scala 114:29]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_16 = eq(UInt<3>("h03"), stateReg) @[Conditional.scala 37:30]
          when _T_16 : @[Conditional.scala 39:67]
            node _countReg_T_8 = sub(countReg, UInt<1>("h01")) @[innerState.scala 123:28]
            node _countReg_T_9 = tail(_countReg_T_8, 1) @[innerState.scala 123:28]
            countReg <= _countReg_T_9 @[innerState.scala 123:16]
            mouseReg <= UInt<8>("h0ff") @[innerState.scala 124:16]
            node _T_17 = eq(countReg, UInt<1>("h00")) @[innerState.scala 125:21]
            when _T_17 : @[innerState.scala 125:29]
              stateReg <= UInt<3>("h05") @[innerState.scala 126:18]
              skip @[innerState.scala 125:29]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_18 = eq(UInt<3>("h04"), stateReg) @[Conditional.scala 37:30]
            when _T_18 : @[Conditional.scala 39:67]
              mouseReg <= UInt<8>("h0ff") @[innerState.scala 130:16]
              node _T_19 = eq(countReg, UInt<1>("h00")) @[innerState.scala 131:21]
              when _T_19 : @[innerState.scala 131:30]
                stateReg <= UInt<3>("h05") @[innerState.scala 132:18]
                skip @[innerState.scala 131:30]
              else : @[innerState.scala 133:19]
                node _countReg_T_10 = sub(countReg, UInt<1>("h01")) @[innerState.scala 134:30]
                node _countReg_T_11 = tail(_countReg_T_10, 1) @[innerState.scala 134:30]
                countReg <= _countReg_T_11 @[innerState.scala 134:18]
                skip @[innerState.scala 133:19]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_20 = eq(UInt<3>("h05"), stateReg) @[Conditional.scala 37:30]
              when _T_20 : @[Conditional.scala 39:67]
                node _stepReg_T = sub(stepReg, UInt<1>("h01")) @[innerState.scala 140:26]
                node _stepReg_T_1 = tail(_stepReg_T, 1) @[innerState.scala 140:26]
                stepReg <= _stepReg_T_1 @[innerState.scala 140:15]
                node _T_21 = eq(stepReg, UInt<1>("h00")) @[innerState.scala 141:20]
                when _T_21 : @[innerState.scala 141:28]
                  stateReg <= UInt<3>("h06") @[innerState.scala 142:18]
                  skip @[innerState.scala 141:28]
                else : @[innerState.scala 143:18]
                  stateReg <= UInt<3>("h02") @[innerState.scala 144:18]
                  node _countReg_T_12 = mul(UInt<2>("h02"), io.round) @[innerState.scala 145:30]
                  node _countReg_T_13 = sub(UInt<4>("h0a"), _countReg_T_12) @[innerState.scala 145:26]
                  node _countReg_T_14 = tail(_countReg_T_13, 1) @[innerState.scala 145:26]
                  node _countReg_T_15 = mul(_countReg_T_14, UInt<10>("h03e8")) @[innerState.scala 145:40]
                  countReg <= _countReg_T_15 @[innerState.scala 145:18]
                  skip @[innerState.scala 143:18]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_22 = eq(UInt<3>("h06"), stateReg) @[Conditional.scala 37:30]
                when _T_22 : @[Conditional.scala 39:67]
                  io.finish <= UInt<1>("h00") @[innerState.scala 151:17]
                  stateReg <= UInt<3>("h00") @[innerState.scala 152:16]
                  skip @[Conditional.scala 39:67]
    node _T_23 = eq(io.game_end, UInt<1>("h00")) @[innerState.scala 157:20]
    when _T_23 : @[innerState.scala 157:28]
      stateReg <= UInt<3>("h00") @[innerState.scala 158:14]
      skip @[innerState.scala 157:28]
    
